name: |
  [AWS] Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: Terraform action to execute
        options:
        - plan
        - destroy
        - apply
        default: plan

jobs:
  terraform:
    runs-on:     ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          do_curl() {
            curl --disable --fail --fail-early --location --connect-timeout 10 --show-error --silent $1
          }

          do_curl https://releases.hashicorp.com/terraform/1.2.0/terraform_1.2.0_linux_amd64.zip > terraform.zip
          unzip terraform.zip
          chmod +x terraform
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region:            us-east-1
          role-to-assume:        ${{ secrets.AWS_ROLE_ARN }}
          role-duration-seconds: "900"
          mask-aws-account-id:   "false"
      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
      - name: Run terraform
        run: |
          cd benchmark
          ../terraform init
          ../terraform ${{ github.event.inputs.action }} -auto-approve
      - name: Cleanup
        if:   ${{ always() }}
        run: |
          rm -fv terraform.zip terraform
