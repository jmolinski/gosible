diff --git a/module_utils/basic.py b/module_utils/basic.py
index 331ca92..8709ad1 100644
--- a/module_utils/basic.py
+++ b/module_utils/basic.py
@@ -101,10 +101,12 @@ from ansible.module_utils.common.text.formatters import (
     SIZE_RANGES,
 )
 
+from py_runtime.init_module import set_result
+
 try:
     from ansible.module_utils.common._json_compat import json
 except ImportError as e:
-    print('\n{{"msg": "Error: ansible requires the stdlib json: {0}", "failed": true}}'.format(to_native(e)))
+    set_result({'msg': 'Error: ansible requires the stdlib json: {0}'.format(to_native(e)), 'failed': True})
     sys.exit(1)
 
 
@@ -254,10 +256,10 @@ _PY3_MIN = sys.version_info >= (3, 5)
 _PY2_MIN = (2, 7) <= sys.version_info < (3,)
 _PY_MIN = _PY3_MIN or _PY2_MIN
 if not _PY_MIN:
-    print(
-        '\n{"failed": true, '
-        '"msg": "ansible-core requires a minimum of Python2 version 2.7 or Python3 version 3.5. Current version: %s"}' % ''.join(sys.version.splitlines())
-    )
+    set_result({
+        'failed': True,
+        'msg': 'ansible-core requires a minimum of Python2 version 2.7 or Python3 version 3.5. Current version: %s' % ''.join(sys.version.splitlines())
+    })
     sys.exit(1)
 
 
@@ -374,6 +376,12 @@ def _load_params():
     inside it as a copy in your own code.
     '''
     global _ANSIBLE_ARGS
+
+    # gosible args
+    from py_runtime.init_module import args
+    if args is not None:
+        return args
+
     if _ANSIBLE_ARGS is not None:
         buffer = _ANSIBLE_ARGS
     else:
@@ -402,7 +410,7 @@ def _load_params():
         params = json.loads(buffer.decode('utf-8'))
     except ValueError:
         # This helper used too early for fail_json to work.
-        print('\n{"msg": "Error: Module unable to decode valid JSON on stdin.  Unable to figure out what parameters were passed", "failed": true}')
+        set_result({'msg': 'Error: Module unable to decode valid JSON on stdin.  Unable to figure out what parameters were passed', 'failed': True})
         sys.exit(1)
 
     if PY2:
@@ -413,8 +421,8 @@ def _load_params():
     except KeyError:
         # This helper does not have access to fail_json so we have to print
         # json output on our own.
-        print('\n{"msg": "Error: Module unable to locate ANSIBLE_MODULE_ARGS in json data from stdin.  Unable to figure out what parameters were passed", '
-              '"failed": true}')
+        set_result({'msg': 'Error: Module unable to locate ANSIBLE_MODULE_ARGS in json data from stdin.  Unable to figure out what parameters were passed',
+                    'failed': True})
         sys.exit(1)
 
 
@@ -1504,7 +1512,7 @@ class AnsibleModule(object):
             kwargs['deprecations'] = deprecations
 
         kwargs = remove_values(kwargs, self.no_log_values)
-        print('\n%s' % self.jsonify(kwargs))
+        set_result(kwargs)
 
     def exit_json(self, **kwargs):
         ''' return from the module, without error '''
